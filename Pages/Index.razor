@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using BlazingPizza.Services
@inject OrderState OrderState


<div class="main">
    <h1>Blazing Pizzas</h1>
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li @onclick="@( () => OrderState.ShowPizzaConfigDialog(special))" style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                            @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@if (OrderState.ShowingConfigDialog)
{
    <ConfigPizzaDialog 
     Pizza="OrderState.ConfigPizza"
     OnCancel="OrderState.ClosePizzaConfigDialog"
     OnConfirm="OrderState.ConfirmPizzaConfigDialog" />
}

@code {
    private List<PizzaSpecial> specials = new();

    protected override async Task OnInitializedAsync()
    {
        // Get list <PizzaSpecial> as JSON from the URI / specials, convert data with GetFromJsonAsync
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
    }
}